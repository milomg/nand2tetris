class Dot {
  field Number x, y, velx, vely;
  field boolean selected;

  static Number one, w, h, m, ground_friction, friction;
  static int radius;
  function void initialize() {
    var Number tmp;

    let radius = 5;
    let one = Number.new(1);
    let w = Number.new(511 - radius);
    let h = Number.new(127 - radius);
    let m = Number.new(radius);
    
    let ground_friction = Number.new(7);
    let tmp = Number.new(10);
    do ground_friction.do_div(tmp);

    let friction = Number.new(8);
    let tmp = Number.new(10);
    do friction.do_div(tmp);

    return;
  }
  constructor Dot new(int _x, int _y) {
    let x = Number.new(_x);
    let y = Number.new(_y);
    let velx = Number.new(0);
    let vely = Number.new(0);
    return this;
  }

  method boolean getSelected() {
    return selected;
  }
  method void setSelected(boolean _selected) {
    let selected = _selected;
    return;
  }

  // We don't need setters because you can manipulate the returned value directly.
  method Number getX() {
    return x;
  }
  method Number getY() {
    return y;
  }
  method Number getVelY() {
    return vely;
  }
  method Number getVelX() {
    return velx;
  }

  method void update() {
    do vely.do_add(one);
    if (~selected) {
      do x.do_add(velx);
      do y.do_add(vely);
    }
    do velx.do_mul(friction);
    do vely.do_mul(friction);

    if (x.cmp(w) > 0) {
      do x.set_from_other(w);
    }
    if (y.cmp(h) > 0) {
      do y.set_from_other(h);
      do velx.do_mul(ground_friction);
      do vely.do_mul(ground_friction);
    }
    if (x.cmp(m) < 0) {
      do x.set_from_other(m);
    }
    if (y.cmp(m) < 0) {
      do y.set_from_other(m);
    }

    return;
  }

  method void draw() {
    var int _x, _y;
    let _x = x.get_int();
    let _y = y.get_int();
    do Screen.drawCircle(_x, _y, radius);
    return;
  }
}
